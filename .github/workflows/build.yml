name: Build and upload release

on: 
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to build'
        required: true
        type: string

env:
  TARGET_REPO: xpano

jobs:
  upload-release-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Checkout target repo
      uses: actions/checkout@v3
      with:
        path: ${{env.TARGET_REPO}}
        ref: ${{inputs.tag}}
        repository: ${{github.repository_owner}}/${{env.TARGET_REPO}}
        submodules: true

    - name: Setup msvc compiler environment
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64

    - name: Build
      id: build
      env:
        TAG: ${{inputs.tag}}
      run: |
        cd $env:TARGET_REPO
        ./misc/build/build-windows-latest.ps1
        $release_filename = "$env:TARGET_REPO-$env:TAG-windows-x64.zip"
        Compress-Archive -Path install/* -DestinationPath $release_filename
        Write-Output "release_filename=$release_filename" >> $env:GITHUB_OUTPUT
        cd ..

    - name: Compute checksum
      env:
        RELEASE_FILENAME: ${{steps.build.outputs.release_filename}}
      run: |
        cd $env:TARGET_REPO
        (Get-FileHash $env:RELEASE_FILENAME -Algorithm SHA256).Hash | Out-File "${env:RELEASE_FILENAME}.sha256"
        Write-Output "Release name: $env:RELEASE_FILENAME"
        Write-Output "sha256 checksum: $(Get-Content  "${env:RELEASE_FILENAME}.sha256")"
        cd ..

    - name: Install script prerequisites
      run: pip install -r requirements.txt

    - name: Upload release files
      env:
        RELEASE_FILENAME: ${{steps.build.outputs.release_filename}}
        SECRET_TOKEN: ${{secrets.SECRET_TOKEN}}
        TAG: ${{inputs.tag}}
      run: |
        cd $env:TARGET_REPO
        python ../upload_assets.py --repo $env:TARGET_REPO --tag $env:TAG $env:RELEASE_FILENAME "${env:RELEASE_FILENAME}.sha256"
        cd ..

  upload-release-macos:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install prerequisites
      run: |
        brew install sdl2 spdlog catch2

    - name: Checkout target repo
      uses: actions/checkout@v3
      with:
        path: ${{env.TARGET_REPO}}
        ref: ${{inputs.tag}}
        repository: ${{github.repository_owner}}/${{env.TARGET_REPO}}
        submodules: true

    - name: Build
      id: build
      env:
        TAG: ${{inputs.tag}}
      run: |
        cd $TARGET_REPO
        ./misc/build/build-macos-12.sh
        release_filename="$TARGET_REPO-$TAG-macos-x86_64.zip"
        zip -r $release_filename Xpano.app
        echo "release_filename=$release_filename" >> "$GITHUB_OUTPUT"
        cd ..

    - name: Compute checksum
      env:
        RELEASE_FILENAME: ${{steps.build.outputs.release_filename}}
      run: |
        cd $TARGET_REPO
        shasum -a 256 "$RELEASE_FILENAME" > "$RELEASE_FILENAME.sha256"
        echo "sha256 checksum:"
        cat "$RELEASE_FILENAME.sha256"
        cd ..

    - name: Install script prerequisites
      run: pip3 install -r requirements.txt

    - name: Upload release files
      env:
        RELEASE_FILENAME: ${{steps.build.outputs.release_filename}}
        SECRET_TOKEN: ${{secrets.SECRET_TOKEN}}
        TAG: ${{inputs.tag}}
      run: |
        cd $TARGET_REPO
        python3 ../upload_assets.py --repo $TARGET_REPO --tag $TAG "$RELEASE_FILENAME" "$RELEASE_FILENAME.sha256"
        cd ..

  upload-sources:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Checkout target repo
      uses: actions/checkout@v3
      with:
        path: ${{env.TARGET_REPO}}
        ref: ${{inputs.tag}}
        repository: ${{github.repository_owner}}/${{env.TARGET_REPO}}
        submodules: true

    - name: Build
      id: build
      env:
        TAG: ${{inputs.tag}}
      run: |
        cd $TARGET_REPO
        echo "test export-ignore" > external/simde/.gitattributes
        ./misc/build/linux/make_tar.sh "$TAG"
        release_filename=`ls packages`
        echo "release_filename=$release_filename" >> "$GITHUB_OUTPUT"
        cd ..

    - name: Compute checksum
      env:
        RELEASE_FILENAME: ${{steps.build.outputs.release_filename}}
      run: |
        cd "$TARGET_REPO/packages"
        shasum -a 256 "$RELEASE_FILENAME" > "$RELEASE_FILENAME.sha256"
        echo "sha256 checksum:"
        cat "$RELEASE_FILENAME.sha256"
        cd ../..

    - name: Install script prerequisites
      run: pip3 install -r requirements.txt

    - name: Upload release files
      env:
        RELEASE_FILENAME: ${{steps.build.outputs.release_filename}}
        SECRET_TOKEN: ${{secrets.SECRET_TOKEN}}
        TAG: ${{inputs.tag}}
      run: |
        cd "$TARGET_REPO/packages"
        python3 ../../upload_assets.py --repo $TARGET_REPO --tag $TAG "$RELEASE_FILENAME" "$RELEASE_FILENAME.sha256"
        cd ../..

  upload-release-appimage:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3

    - name: Install linuxdeploy
      run: |
        wget https://github.com/linuxdeploy/linuxdeploy/releases/download/1-alpha-20230713-1/linuxdeploy-x86_64.AppImage
        chmod +x linuxdeploy-x86_64.AppImage
        echo "$(pwd)" >> $GITHUB_PATH

    - name: Install prerequisites
      run: |
          sudo apt-get update
          sudo apt-get install -y libdbus-1-dev

    - name: Checkout target repo
      uses: actions/checkout@v3
      with:
        path: ${{env.TARGET_REPO}}
        ref: ${{inputs.tag}}
        repository: ${{github.repository_owner}}/${{env.TARGET_REPO}}
        submodules: true

    - name: Build
      id: build
      env:
        TAG: ${{inputs.tag}}
      run: |
        cd $TARGET_REPO
        ./misc/build/build-appimage.sh
        release_filename=`ls . | grep Xpano`
        echo "release_filename=$release_filename" >> "$GITHUB_OUTPUT"
        cd ..

    - name: Compute checksum
      env:
        RELEASE_FILENAME: ${{steps.build.outputs.release_filename}}
      run: |
        cd $TARGET_REPO
        shasum -a 256 "$RELEASE_FILENAME" > "$RELEASE_FILENAME.sha256"
        echo "sha256 checksum:"
        cat "$RELEASE_FILENAME.sha256"
        cd ..

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install script prerequisites
      run: |
        python -m pip install --upgrade pip
        pip3 install -r requirements.txt

    - name: Upload release files
      env:
        RELEASE_FILENAME: ${{steps.build.outputs.release_filename}}
        SECRET_TOKEN: ${{secrets.SECRET_TOKEN}}
        TAG: ${{inputs.tag}}
      run: |
        cd $TARGET_REPO
        python3 ../upload_assets.py --repo $TARGET_REPO --tag $TAG "$RELEASE_FILENAME" "$RELEASE_FILENAME.sha256"
        cd ..
